server:
  port: 8081

spring:
  config:
    import: optional:file:.env[.properties]

  application:
    name: user-service

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/consort_group
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      host: localhost
      port: 6381

  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB


logging:
  level:
    root: INFO
    org.springframework: DEBUG

kafka:
  bootstrap-servers: localhost:9092
  consumer-group-id: forum-service-group
  session-timeout-ms: 10000
  max-partition-fetch-bytes: 1048576
  max-poll-records: 500
  max-poll-interval-ms: 300000
  user-registration: user-registered-topic
  user-update-profile: user-update-profile-topic
  verification-code-resent: verification-code-resent-topic
  password-reset-request: password-reset-request-topic
  super-admin-action: super-admin-action-topic
  course-purchased: course-purchased-topic
  producer:
    enable: true

app:
  link: http://localhost:8081/index.html

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info

oneid:
  base-url: https://sso.egov.uz/sso/oauth/Authorization.do
  client-id: CLIENT_ID
  client-secret: CLIENT_SECRET
  redirect-uri: http://localhost:8080/api/v1/oneid/callback
  token-url: https://sso.egov.uz/sso/oauth/Token.do
  profile-url: https://sso.egov.uz/sso/oauth/userinfo
  time-out: 5000

mintrud:
  api:
    token: wUIBjx3G1C1Ee+eIXtt/zVIFkS40lhoan0
    url: https://example.com/mintrud/api

security:
  token: ${SECURITY_TOKEN}
  expiration: 3600000

async:
  core-pool-size: 5
  max-pool-size: 10
  queue-capacity: 15
  thread-name-prefix: user-service

cache:
  redis-batch-size: 500

course:
  service:
     url: http://localhost:8084

payment:
  service:
    url: http://localhost:8086

notification:
  service:
    url: http://localhost:8082

springdoc:
  api-docs:
    enabled: true

  swagger-ui:
    docExpansion: full
    defaultModelsExpandDepth: 1
    defaultModelExpandDepth: 3
    defaultModelRendering: schema
    operationsSorter: method
    tagsSorter: alpha

  model-converters:
    pageable-converter:
      enabled: true

